{"version":3,"sources":["Components/NumberButtons.js","Components/Operations.js","Components/InputField.js","Components/Reset.js","Components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["NumberButtons","props","className","map","e","i","onClick","clicked","value","Operations","Math","random","equals","InputField","placeholder","readOnly","Reset","Calculator","state","inputValue","numberHandler","bind","operationHandler","resetHandler","equalHandler","this","setState","target","lastValue","length","math","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAgBeA,G,MAbc,SAACC,GAE5B,OACE,qBAAKC,UAAU,UAAf,SAFc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAG/BC,KAAI,SAACC,EAAGC,GAAJ,OACX,wBAAQH,UAAU,SAASI,QAASL,EAAMM,QAASC,MAAOJ,EAA1D,SACGA,GAD+DC,UCW3DI,G,MAjBW,SAACR,GAEzB,OACE,sBAAKC,UAAU,aAAf,UAFiB,CAAC,MAAO,MAAO,MAAO,MAAO,KAGhCC,KAAI,SAACC,GAAD,OACd,wBAAQI,MAAOJ,EAAGE,QAASL,EAAMM,QAAjC,SACGH,GAD4CM,KAAKC,aAKpD,wBAAQT,UAAU,kBAAkBI,QAASL,EAAMW,OAAnD,oBCFOC,G,MARW,SAACZ,GACzB,OACE,qBAAKC,UAAU,WAAf,SACE,uBAAOY,YAAY,IAAIZ,UAAU,QAAQM,MAAOP,EAAMO,MAAOO,UAAQ,QCM5DC,EATM,SAACf,GACpB,OACE,8BACE,wBAAQC,UAAU,eAAeI,QAASL,EAAMM,QAAhD,sB,QCwDSU,E,kDAtDb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXC,WAAY,IAEd,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBARH,E,0DAWLjB,GACZqB,KAAKC,UAAS,SAACR,GAAD,MAAY,CACxBC,WAAYD,EAAMC,WAAaf,EAAEuB,OAAOnB,Y,qCAI1CiB,KAAKC,SAAS,CACZP,WAAY,O,uCAGCf,GACf,IAAMwB,EAAYH,KAAKP,MAAMC,WAAWM,KAAKP,MAAMC,WAAWU,OAAS,GAEnEJ,KAAKP,MAAMC,YAA4B,MAAdS,GAAmC,MAAdA,GAChDH,KAAKC,UAAS,SAACR,GAAD,MAAY,CACxBC,WAAYD,EAAMC,WAAaf,EAAEuB,OAAOnB,Y,qCAK5C,IAAMoB,EAAYH,KAAKP,MAAMC,WAAWM,KAAKP,MAAMC,WAAWU,OAAS,GACrD,MAAdD,GAAmC,MAAdA,GACrBH,KAAKP,MAAMC,YACbM,KAAKC,UAAS,SAACR,GAAD,MAAY,CACxBC,WAAYW,IAAcZ,EAAMC,kB,+BAKpC,OACE,sBAAKjB,UAAU,aAAf,UACE,cAAC,EAAD,CAAYM,MAAOiB,KAAKP,MAAMC,aAC9B,cAAC,EAAD,CAAeZ,QAASkB,KAAKL,gBAC7B,cAAC,EAAD,CACEb,QAASkB,KAAKH,iBACdV,OAAQa,KAAKD,eAEf,cAAC,EAAD,CAAOjB,QAASkB,KAAKF,sB,GAjDJQ,IAAMC,WCIhBC,MARf,WACE,OACE,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,CAAYA,UAAU,kBCObgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ee6d070.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CssFiles/NumberButtons.modules.css\";\r\n\r\nexport const NumberButtons = (props) => {\r\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\n  return (\r\n    <div className=\"numbers\">\r\n      {numbers.map((e, i) => (\r\n        <button className=\"number\" onClick={props.clicked} value={e} key={i}>\r\n          {e}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberButtons;\r\n","import React from \"react\";\r\nimport \"./CssFiles/Operations.modules.css\";\r\nexport const Operations = (props) => {\r\n  const operations = [\" + \", \" - \", \" / \", \" * \", \".\"];\r\n  return (\r\n    <div className=\"operations\">\r\n      {operations.map((e) => (\r\n        <button value={e} onClick={props.clicked} key={Math.random()}>\r\n          {e}\r\n        </button>\r\n      ))}\r\n      {\r\n        <button className=\"equal-operation\" onClick={props.equals}>\r\n          =\r\n        </button>\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Operations;\r\n","import React from \"react\";\r\nimport \"./CssFiles/InputField.modules.css\";\r\nexport const InputField = (props) => {\r\n  return (\r\n    <div className=\"inputDiv\">\r\n      <input placeholder=\"0\" className=\"input\" value={props.value} readOnly />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport \"./CssFiles/Operations.modules.css\";\r\nexport const Reset = (props) => {\r\n  return (\r\n    <div>\r\n      <button className=\"reset-button\" onClick={props.clicked}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Reset;\r\n","import React from \"react\";\r\nimport NumberButtons from \"./NumberButtons\";\r\nimport Operations from \"./Operations\";\r\nimport InputField from \"./InputField\";\r\nimport Reset from \"./Reset\";\r\nimport * as math from \"mathjs\";\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: \"\",\r\n    };\r\n    this.numberHandler = this.numberHandler.bind(this);\r\n    this.operationHandler = this.operationHandler.bind(this);\r\n    this.resetHandler = this.resetHandler.bind(this);\r\n    this.equalHandler = this.equalHandler.bind(this);\r\n  }\r\n\r\n  numberHandler(e) {\r\n    this.setState((state) => ({\r\n      inputValue: state.inputValue + e.target.value,\r\n    }));\r\n  }\r\n  resetHandler() {\r\n    this.setState({\r\n      inputValue: \"\",\r\n    });\r\n  }\r\n  operationHandler(e) {\r\n    const lastValue = this.state.inputValue[this.state.inputValue.length - 1];\r\n\r\n    if (this.state.inputValue && lastValue !== \" \" && lastValue !== \".\") {\r\n      this.setState((state) => ({\r\n        inputValue: state.inputValue + e.target.value,\r\n      }));\r\n    }\r\n  }\r\n  equalHandler() {\r\n    const lastValue = this.state.inputValue[this.state.inputValue.length - 1];\r\n    if (lastValue === \" \" || lastValue === \".\") return;\r\n    if (this.state.inputValue) {\r\n      this.setState((state) => ({\r\n        inputValue: math.evaluate(state.inputValue),\r\n      }));\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <InputField value={this.state.inputValue} />\r\n        <NumberButtons clicked={this.numberHandler} />\r\n        <Operations\r\n          clicked={this.operationHandler}\r\n          equals={this.equalHandler}\r\n        />\r\n        <Reset clicked={this.resetHandler} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import \"./App.css\";\r\nimport Calculator from \"./Components/Calculator\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calculator className=\"calculator\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}